{"version":3,"sources":["/Users/thecrab/Github/AngularApps/fambox/src async","/Users/thecrab/Github/AngularApps/fambox/src/app/app.component.css","/Users/thecrab/Github/AngularApps/fambox/src/app/app.component.html","/Users/thecrab/Github/AngularApps/fambox/src/app/app.component.ts","/Users/thecrab/Github/AngularApps/fambox/src/app/app.module.ts","/Users/thecrab/Github/AngularApps/fambox/src/app/map.ts","/Users/thecrab/Github/AngularApps/fambox/src/app/services/estimate.service.ts","/Users/thecrab/Github/AngularApps/fambox/src/app/spacha-map/spacha-map.component.css","/Users/thecrab/Github/AngularApps/fambox/src/app/spacha-map/spacha-map.component.html","/Users/thecrab/Github/AngularApps/fambox/src/app/spacha-map/spacha-map.component.ts","/Users/thecrab/Github/AngularApps/fambox/src/app/spacha-map/spacha-map.service.ts","/Users/thecrab/Github/AngularApps/fambox/src/environments/environment.ts","/Users/thecrab/Github/AngularApps/fambox/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/thecrab/Github/AngularApps/fambox/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/thecrab/Github/AngularApps/fambox/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \" <!-- <section class=\\\"section  is-fullheight is-fullhd\\\">  -->\\n  <nav class=\\\"navbar \\\">\\n  <div class=\\\"navbar-brand\\\">\\n    <a class=\\\"navbar-item\\\" href=\\\"http://bulma.io\\\">\\n      <img src=\\\"assets/images/fambox-logo.png\\\" alt=\\\"Bulma: a modern CSS framework based on Flexbox\\\" width=\\\"112\\\" height=\\\"28\\\">\\n    </a>\\n\\n    <a class=\\\"navbar-item is-hidden-desktop\\\" href=\\\"https://github.com/jgthms/bulma\\\" target=\\\"_blank\\\">\\n      <span class=\\\"icon\\\" style=\\\"color: #333;\\\">\\n        <i class=\\\"fa fa-github\\\"></i>\\n      </span>\\n    </a>\\n\\n    <a class=\\\"navbar-item is-hidden-desktop\\\" href=\\\"https://twitter.com/jgthms\\\" target=\\\"_blank\\\">\\n      <span class=\\\"icon\\\" style=\\\"color: #55acee;\\\">\\n        <i class=\\\"fa fa-twitter\\\"></i>\\n      </span>\\n    </a>\\n\\n    <div class=\\\"navbar-burger burger\\\" data-target=\\\"navMenuExample\\\">\\n      <span></span>\\n      <span></span>\\n      <span></span>\\n    </div>\\n  </div>\\n\\n  <div id=\\\"navMenuExample\\\" class=\\\"navbar-menu\\\">\\n    <div class=\\\"navbar-start\\\">\\n      <a class=\\\"navbar-item \\\" href=\\\"http://bulma.io/\\\">\\n        RIDE\\n      </a>\\n      <a class=\\\"navbar-item \\\" href=\\\"http://bulma.io/\\\">\\n        DRIVE\\n      </a>\\n      <div class=\\\"navbar-item has-dropdown is-hoverable\\\">\\n        <a class=\\\"navbar-link  is-active\\\" href=\\\"/cities/lincoln\\\">\\n          CITIES\\n        </a>\\n        <div class=\\\"navbar-dropdown \\\">\\n          <a class=\\\"navbar-item \\\" href=\\\"/cities/lincoln\\\">\\n            Lincoln\\n          </a>\\n          <a class=\\\"navbar-item \\\" href=\\\"/cities/\\\">\\n            Nottingham\\n          </a>\\n          <a class=\\\"navbar-item \\\" href=\\\"/cities/\\\">\\n            Manchester\\n          </a>\\n          <a class=\\\"navbar-item \\\" href=\\\"/cities/\\\">\\n            Liverpool\\n          </a>\\n          <a class=\\\"navbar-item \\\" href=\\\"/cities/\\\">\\n            Hull\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- right nav items -->\\n    <div class=\\\"navbar-end\\\">\\n      <a class=\\\"navbar-item\\\">\\n        SIGN UP\\n      </a>\\n      <a class=\\\"navbar-item\\\">\\n        SIGNIN\\n      </a>\\n      <div class=\\\"navbar-item\\\">\\n        <p class=\\\"control\\\">\\n          <button class=\\\"button is-primary\\\">\\n            <span class=\\\"icon\\\">\\n              <i class=\\\"fa fa-taxi\\\"></i>\\n            </span>\\n            <span>BECOME A DRIVER</span>\\n          </button>\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container is-fullhd \\\">\\n  <app-spacha-map></app-spacha-map>\\n</div>\\n\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"content has-text-centered\\\">\\n          <p>\\n              <strong>FAMBOX</strong> by <a href=\\\"https://github.io/thecrab\\\">The Crab</a>. Made with lots of love\\n              <a href=\\\"http://opensource.org/licenses/mit-license.php\\\">MIT</a>. The website content\\n              is copyright <a href=\\\"http://creativecommons.org/licenses/by-nc-sa/4.0/\\\">CC ANS 4.0</a>.\\n          </p>\\n          <p>\\n              <a class=\\\"icon\\\" href=\\\"https://github.com/thecrab/fambox\\\">\\n                  <i class=\\\"fa fa-github\\\"></i>\\n              </a>\\n          </p>\\n      </div>\\n  </div>\\n</footer>\\n<!-- </section>  -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/thecrab/Github/AngularApps/fambox/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/thecrab/Github/AngularApps/fambox/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { SpachaMapComponent } from './spacha-map/spacha-map.component';\nimport { SpachaMapService } from './spacha-map/spacha-map.service';\nimport { EstimateService } from \"./services/estimate.service\";\n\n// Firebase\nimport { AngularFireModule }          from \"angularfire2\";\nimport { AngularFireDatabaseModule }  from \"angularfire2/database\";\nimport { AngularFireAuthModule }      from \"angularfire2/auth\";\n\n// App ENV\nimport { environment } from '../environments/environment'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpachaMapComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    AngularFireAuthModule\n  ],\n  providers: [SpachaMapService, EstimateService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/thecrab/Github/AngularApps/fambox/src/app/app.module.ts","\nimport { LngLat } from \"mapbox-gl\";\n\nexport interface IGeometry {\n    type:string\n    coordinates:number[]\n}\n\nexport interface IGeoJson {\n    type:string\n    geometry:IGeometry\n    properties?:any\n    $key?:string\n}\n\nexport class GeoJson implements IGeoJson {\n    type:string = 'Feature'\n    geometry: IGeometry\n\n    constructor(coordinates, public properties?) {\n        this.geometry = {\n            type: 'Point',\n            coordinates: coordinates\n        }\n    }\n}\n\nexport class FeatureCollection {\n    type:string = 'FeatureCollection'\n    constructor(public features: Array<GeoJson>) {}\n}\n\nexport class Address {\n    formattedAddress: string\n    street: string\n    locality: string\n    city: string\n    postcode: string\n    geocodes: LngLat\n}\n\n\n// WEBPACK FOOTER //\n// /Users/thecrab/Github/AngularApps/fambox/src/app/map.ts","import { Injectable }   from '@angular/core';\nimport { Headers, Http, RequestOptions }         from '@angular/http'\nimport { environment }  from \"../../environments/environment\"\nimport { Observable }   from \"rxjs/Observable\"\n\n@Injectable()\nexport class EstimateService {\n    \n    private headers:Headers\n    private url:string = 'http://localhost:4000/api/estimate?'\n\n    constructor(private http:Http) {}\n\n    estimate(coordinates:EstimateParams):Observable<Price[]> {\n        \n        let params:string = `start_latitude=${coordinates.start_latitude}&start_longitude=${coordinates.start_longitude}&end_latitude=${coordinates.end_latitude}&end_longitude=${coordinates.end_longitude}`\n        let options = new RequestOptions({headers: this.headers})\n        \n        return this.http.get(this.url + params)\n            .map(res => res.json().prices as [Price])\n    }\n\n    private handleError(error:Error): void {\n        console.error('An error occured: ', error)\n        // Promise.reject(error.message || error)\n    }\n\n}\n\n\nexport interface Price {\n    localized_display_name: string\n    distance: number\n    display_name: string\n    product_id: string\n    high_estimate: number\n    low_estimate: number\n    duration: number\n    estimate: string\n    currency_code: string\n}\n\nexport interface EstimateParams {\n    start_latitude:number\n    start_longitude:number\n    end_latitude:number\n    end_longitude:number\n    seat_count?:number\n}\n\n\n// WEBPACK FOOTER //\n// /Users/thecrab/Github/AngularApps/fambox/src/app/services/estimate.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/thecrab/Github/AngularApps/fambox/src/app/spacha-map/spacha-map.component.css\n// module id = ../../../../../src/app/spacha-map/spacha-map.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"columns is-gapless is-600px-height\\\">\\n    <div class=\\\"column is-one-quarter\\\">\\n        <nav class=\\\"panel\\\">\\n            <p class=\\\"panel-heading\\\">\\n                estimate fare\\n            </p>\\n            <div class=\\\"panel-block\\\">\\n                <div class=\\\"form\\\">\\n                    <div class=\\\"field has-addons\\\">\\n                        <div class=\\\"control has-icons-left\\\">\\n                            <input type=\\\"text\\\" \\n                                class=\\\"input\\\"\\n                                #pickupBox \\n                                [value]=\\\"pickupLocation\\\"\\n                                (keyup)=\\\"search(pickupBox.value)\\\" \\n                                placeholder=\\\"PICKUP LOCATION\\\">\\n\\n                            <span class=\\\"icon is-left\\\">\\n                                <i class=\\\"fa fa-map-pin\\\"></i>\\n                            </span>\\n                        </div>\\n                        <div class=\\\"control\\\">\\n                            <span class=\\\"button\\\" (click)=\\\"resetFields()\\\" >\\n                                X\\n                            </span>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"control has-icons-left\\\" *ngIf=\\\"pickupAddress\\\">\\n                        <input type=\\\"text\\\"\\n                            #destinationBox \\n                            class=\\\"input\\\" \\n                            [value]=\\\"destinationLocation\\\" \\n                            (keyup)=\\\"search(destinationBox.value)\\\" \\n                            placeholder=\\\"DESTINATION\\\"\\n                        >\\n                        <span class=\\\"icon is-left\\\">\\n                            <i class=\\\"fa fa-flag-checkered\\\"></i>\\n                        </span>\\n                    </div>\\n\\n                    <div class=\\\"panel-block is-active\\\" *ngFor=\\\"let address of searchResults | async\\\" (click)=\\\"setAddress(address)\\\">\\n                        <span class=\\\"panel-icon\\\">\\n                            <i class=\\\"fa fa-map-marker\\\"></i>\\n                        </span>\\n                        {{ address.formattedAddress }}\\n                    </div>\\n                    \\n                    <hr>\\n                    <table class=\\\"table is-fullwidth\\\" *ngIf=\\\"pickupAddress && destinationAddress\\\">\\n                        <tr class=\\\"\\\" *ngFor=\\\" let price of prices | async\\\">\\n                            <td>{{price.localized_display_name}}</td>\\n                            <td>{{ price.estimate }} </td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"panel-block\\\" *ngIf=\\\"pickupAddress && destinationAddress\\\">\\n                <button class=\\\"button is-primary is-large  is-fullwidth \\\" \\n                    (click)=\\\"showModal()\\\" >\\n                    <span>REQUEST RIDE</span>\\n                    <span class=\\\"icon\\\">\\n                        <i class=\\\"fa fa-chevron-right\\\"></i>\\n                    </span>\\n                </button>\\n            </div>\\n        </nav>\\n    </div>\\n\\n    <!-- Spacha-Map -->\\n    <div class=\\\"map column\\\" id=\\\"spacha-map\\\"></div>  \\n\\n    <div class=\\\"modal\\\" id=\\\"appStoreModal\\\" >\\n        <div class=\\\"modal-background\\\"></div>\\n        <div class=\\\"modal-card\\\">\\n            <header class=\\\"modal-card-head\\\">\\n                <p class=\\\"modal-card-title\\\">Download Spøta to book a ride</p>\\n                <button class=\\\"delete\\\" aria-label=\\\"close\\\" (click)=\\\"showModal()\\\"></button>\\n            </header>\\n            <section class=\\\"modal-card-body\\\">\\n                <!-- Modal Content ... -->\\n                <table class=\\\"table is-fullwidth\\\">\\n                    <tbody>\\n                        <tr>\\n                            <td><a href='#'><img alt='Get it on Google Play' src='/assets/images/en_badge_web_generic.png'/></a></td>\\n                            <td><a href='#'><img alt='Get it on the AppStore' src='/assets/images/apple-appstore-badge.png'/></a></td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </section>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/thecrab/Github/AngularApps/fambox/src/app/spacha-map/spacha-map.component.html\n// module id = ../../../../../src/app/spacha-map/spacha-map.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core'\nimport { Http } from \"@angular/http\"\nimport * as mapboxgl from \"mapbox-gl\"\nimport { Map, GeolocateControl, LngLat, LngLatBounds } from \"mapbox-gl\"\nimport { SpachaMapService } from \"./spacha-map.service\";\nimport { GeoJson, FeatureCollection, Address } from \"../map\";\nimport { EstimateService, Price, EstimateParams } from \"../services/estimate.service\";\n\nimport { Subject } from \"rxjs/Subject\";\n// import { ReplaySubject } from \"rxjs/ReplaySubject\";\nimport { Observable } from \"rxjs/Observable\";\n\n// Observable class extension\nimport 'rxjs/add/observable/of'\n\n// Observable operators\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/switchMap'\nimport 'rxjs/add/operator/debounceTime'\nimport 'rxjs/add/operator/distinctUntilChanged'\n\n\n@Component({\n  selector: 'app-spacha-map',\n  templateUrl: './spacha-map.component.html',\n  styleUrls: ['./spacha-map.component.css']\n})\nexport class SpachaMapComponent implements OnInit {\n\n    // default settings\n    map: Map\n    lat:number = 0.0\n    lng:number = 0.0\n    message:string = \"Hello msg\"\n\n    // data\n    vehiclesLocations: any\n    directions: any\n    markers: any\n    private estimateParams:EstimateParams = null\n\n    // Search\n    private searchTerms:Subject<string> = new Subject<string>()\n    searchResults:Observable<Address[]>\n    prices:Observable<Price[]>\n    pickupLocation:string = ''\n    destinationLocation:string = ''\n    pickupAddress:Address = null\n    destinationAddress:Address = null\n\n    constructor(private mapService:SpachaMapService, private estimateService:EstimateService, private http:Http) {}\n\n    ngOnInit() {\n        this.markers = this.mapService.getMarkers()\n        \n        this.initializeMap()\n        this.searchResults = this.searchTerms\n            .debounceTime(300)\n            .distinctUntilChanged()\n            .switchMap(term => term\n                ? this.mapService.search(term)\n                : Observable.of<Address[]>([])\n            )\n            .catch(error => {\n                console.log(error)\n                return Observable.of<Address[]>([])\n            })\n        \n    }\n\n    initializeMap() {\n        // locate the visitor\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                this.lat = position.coords.latitude\n                this.lng = position.coords.longitude\n                this.map.flyTo({\n                    center: [this.lng, this.lat]\n                })\n            })\n        }\n\n        this.map = new mapboxgl.Map({\n            container: 'spacha-map',\n            zoom: 13,\n            center: [this.lng, this.lat],\n            style: 'mapbox://styles/mapbox/dark-v9'\n            // style: 'mapbox://styles/mapbox/navigation-preview-night-v2'\n        })\n\n        this.buildMap()    \n    }\n\n    buildMap() {\n        // Add map controls\n        // this.map.addControl(new mapboxgl.control())\n        let geolocateControl = new GeolocateControl({\n            positionOptions: { enableHighAccuracy: true },\n            watchPosition: false\n        })\n\n        // Add Marker on Click\n        this.map.on('click', (event) => {\n            const coordinates = [event.lngLat.lng, event.lngLat.lat]\n            const newMarker = new GeoJson(coordinates, { message: this.message })\n            this.mapService.createMarkers(newMarker)\n        }) \n\n        // Add realtime vehicles from firebase data on map load\n        this.map.on('load', (e) => {\n            this.map.addControl(geolocateControl)\n            \n            // register the source\n            this.map.addSource('vehicles', {\n                type: 'geojson',\n                data: {\n                    type: 'FeatureCollection',\n                    features: []\n                }\n            })\n\n            this.map.addSource('directions', {\n                type: 'geojson',\n                data: {\n                    type: 'FeatureCollection',\n                    features: []\n                }\n            })\n            \n            // create map layers with realtime data\n            this.map.addLayer({\n                id: 'vehicles',\n                source: 'vehicles',\n                type: 'symbol',\n                layout: {\n                    // 'text-field': '{message}',\n                    // 'text-size': 12,\n                    // 'text-transform': 'uppercase',\n                    'icon-image': 'car-15'\n                    // 'icon-image': '{icon}-15'\n                    // 'text-offset': [0, 1.5]\n                },\n                paint: {\n                    'text-color': '#f404b8',\n                    // 'text-halo-color': '#fff',\n                    // 'icon-halo-color': '#f404b8',\n                    'text-halo-width': 2\n                }\n            })\n\n            // get source\n            this.vehiclesLocations = this.map.getSource('vehicles')\n            \n            // subscribe to realtime database set and source\n            this.markers.subscribe(markers => {\n                let data = new FeatureCollection(markers)\n                this.vehiclesLocations.setData(data)\n            })\n\n            this.map.addLayer({\n                id: 'directions',\n                source: 'directions',\n                type: 'line',\n                layout: {\n                    'line-join': 'round',\n                    'line-cap': 'round'\n                },\n                paint: {\n                    'line-color': '#f404b8',\n                    'line-width': 4\n                }\n            })\n\n            // get source\n            this.directions = this.map.getSource('directions')\n\n            geolocateControl.on('geolocate', (event) => {\n                this.flyTo(new GeoJson([event.coords.longitude, event.coords.latitude], { message: 'You' }))\n                this.populatePickupLocation([event.coords.longitude, event.coords.latitude])\n            })\n        }) // END Map.on('load', ...)\n    }\n\n    // Helpers\n    removeMarker(marker) {\n        this.mapService.removeMarker(marker.$key)\n    }\n\n    flyTo(data:GeoJson) {\n        this.map.flyTo({\n            center: data.geometry.coordinates,\n            zoom: 13\n        })\n    }\n\n    // Search implementation\n    search(term:string) {\n        if (term.length >= 3) this.searchTerms.next(term)\n    }\n\n    setAddress(address:Address):void {\n        if (this.pickupAddress) {\n            this.destinationAddress = address\n            this.destinationLocation = address.formattedAddress\n        } else {\n            this.pickupAddress = address\n            this.pickupLocation = address.formattedAddress            \n        }\n\n        this.searchTerms.next() \n\n        if (this.pickupAddress && this.destinationAddress) {\n            this.getPrices()\n            this.getDirections()        \n        }\n        // const coordinates = [address.geocodes.longitude, address.geocodes.latitude]\n        // const newMarker = new GeoJson(coordinates, { message: address.formattedAddress })\n        // let data = new FeatureCollection(newMarker)\n        // this.vehiclesLocations.setData(data)\n    }\n\n    resetFields():void {\n        this.pickupAddress = this.destinationAddress = null\n        this.pickupLocation = this.destinationLocation = ''\n        this.prices = Observable.of<Price[]>([])\n        this.searchTerms.next()\n    }\n\n    showModal():void {\n        document.getElementById('appStoreModal').classList.toggle('is-active')\n    }\n\n    populatePickupLocation(coordinates:[number]):void {\n        let coords = { longitude:coordinates[0], latitude:coordinates[1] }\n        this.mapService.reverse([coords.longitude, coords.latitude])\n        .subscribe(a => {\n            this.pickupAddress = a\n            this.pickupLocation = a.formattedAddress\n        })\n    }\n\n    private getPrices():void {\n        \n        this.estimateParams = {\n            start_latitude:  this.pickupAddress.geocodes.latitude,\n            start_longitude: this.pickupAddress.geocodes.longitude,\n            end_latitude:    this.destinationAddress.geocodes.latitude,\n            end_longitude:   this.destinationAddress.geocodes.longitude\n        }\n\n        this.prices = this.estimateService.estimate(this.estimateParams)\n    }\n\n    private getDirections():void {\n        let coordinates:string = `${this.estimateParams.start_longitude},${this.estimateParams.start_latitude};${this.estimateParams.end_longitude},${this.estimateParams.end_latitude}`\n        this.mapService.getDirections(coordinates).subscribe( directions => {\n            this.showRoute(directions)\n        })\n    }\n\n    private showRoute(directions:any[]):void {\n        let data = new FeatureCollection(directions)\n        this.directions.setData(data)\n\n        let coordinates = directions[0].geometry.coordinates\n        let bounds = coordinates.reduce((bound, coord) => {\n            return bound.extend(coord)\n        }, new LngLatBounds(coordinates[0], coordinates[1]))\n\n        this.map.fitBounds(bounds, { padding: 60 })\n    }\n}\n\n// interface IRide {\n//   pickupAddress: IAddress\n//   destinationAddress: IAddress\n//   price: IPrice\n// }\n\n// interface IPrice {\n//   name: string\n//   amount: string\n//   eta: string\n// }\n\n// interface IAddress {\n//   formattedName: string\n//   latitude: number\n//   longitude: number\n// }\n\n// class Ride implements IRide {\n//   pickupAddress:IAddress\n//   destinationAddress:IAddress\n//   price:IPrice\n// }\n\n// let ride:Ride           = new Ride()\n// ride.pickupAddress      = { formattedName: 'iewugefdsvsd', latitude: 12345, longitude: -0.1234565778 }\n// ride.destinationAddress = { formattedName: 'iewugefdsvsd', latitude: 12345, longitude: -0.1234565778 }\n// ride.price              = { name: 'iewugefdsvsd', amount: '12345', eta: '1234565778' }\n\n\n// WEBPACK FOOTER //\n// /Users/thecrab/Github/AngularApps/fambox/src/app/spacha-map/spacha-map.component.ts","import { Injectable }   from '@angular/core'\nimport { Http }         from '@angular/http'\nimport { environment }  from \"../../environments/environment\"\nimport { \n  AngularFireDatabase, \n  FirebaseListObservable\n} from \"angularfire2/database\"\n\nimport { GeoJson, Address } from \"../map\"\nimport * as mapboxgl    from \"mapbox-gl\"\nimport { Map, Marker, LngLat }  from \"mapbox-gl\"\n\nimport { Observable } from \"rxjs/Observable\"\nimport 'rxjs/add/operator/map'\nimport 'rxjs/add/operator/toPromise'\n\n\n@Injectable()\nexport class SpachaMapService {\n    map:Map\n    // directions:MapboxDirections\n\n    constructor(public db: AngularFireDatabase, private http:Http) {\n        (mapboxgl as any).accessToken = environment.mapbox.accessToken\n\n        // this.directions = new mapboxgl.Directions({\n        //     // accessToken: mapboxgl.accessToken,\n        //     unit: 'metric',\n        //     profile: 'mapbox/driving-traffic'\n        //     // , proximity: [lng, lat]\n        // })\n    }\n\n    getMarkers(): FirebaseListObservable<any> {\n        return this.db.list('/markers')\n    }\n\n    createMarkers(data:GeoJson) {\n        return this.db.list('/markers')\n                    .push(data)\n    }\n  \n    removeMarker($key:string) {\n        return this.db.object('/markers/' + $key).remove()\n    }\n\n    getDirections(geocodes:string):Observable<any> {\n        // Semicolon-separated list of {longitude},{latitude};{longitude},{latitude} coordinate pairs\n        let directionsUrl:string = `https://api.mapbox.com/directions/v5/mapbox/driving-traffic/`\n        let options              = `geometries=geojson&overview=full&access_token=${mapboxgl.accessToken}`\n        return this.http.get(`${ directionsUrl }${geocodes}?${options}`)\n                        .map(directions => directions.json().routes)\n    }\n\n\n    search(address:string):Observable<Address[]> {\n        // return this.http.get('api/addresses/search')\n        return this.http\n        .get(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&components=country:GB`)\n        .map(res => res.json().results)\n        .map(results => {\n            let addresses: Address[] = []\n            \n            for (var i = 0; i < results.length; i++) {\n                let address = new Address()\n                let found = results[i]\n\n                address.formattedAddress = found.formatted_address,\n                address.geocodes = {\n                    latitude: found.geometry.location.lat, \n                    longitude: found.geometry.location.lng \n                } // location: {lat: 42.5641201, lng: -71.0239323}\n                // address.geocodes.longitude = found.geometry.location.lng // location: {lat: 42.5641201, lng: -71.0239323}\n                addresses.push(address)\n            }\n            return addresses\n        })\n    }\n\n    reverse(address:[number]):Observable<Address> {\n        // address:LngLat ====> address.toArray()\n        // return this.http.get('api/addresses/reverse')\n        \n        return this.http\n            .get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${address[1]},${address[0]}`)\n            .map(res => res.json().results)\n            .map(results => {\n                let address = new Address()\n                let found = results[0]\n\n                address.formattedAddress = found.formatted_address,\n                address.geocodes = {\n                    latitude: found.geometry.location.lat, \n                    longitude: found.geometry.location.lng \n                } \n                return address\n            })\n    }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/thecrab/Github/AngularApps/fambox/src/app/spacha-map/spacha-map.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n    production: false,\n\n    firebaseConfig: {\n        apiKey: \"AIzaSyBYLKl0XVX8i9iF5T8PmdEPXXupGIylvqo\",\n        authDomain: \"lioncabs-fc588.firebaseapp.com\",\n        databaseURL: \"https://lioncabs-fc588.firebaseio.com\",\n        projectId: \"lioncabs-fc588\",\n        storageBucket: \"lioncabs-fc588.appspot.com\",\n        messagingSenderId: \"768358335569\"\n    },\n\n    mapbox: {\n        accessToken: 'pk.eyJ1IjoidGhlY3JhYiIsImEiOiJWbFpnaDBzIn0.ucrweW4ZDtEFHZlxRYpUug'\n    }\n}\n  \n\n\n// WEBPACK FOOTER //\n// /Users/thecrab/Github/AngularApps/fambox/src/environments/environment.ts","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n\n\n\n// WEBPACK FOOTER //\n// /Users/thecrab/Github/AngularApps/fambox/src/main.ts"],"sourceRoot":"webpack:///"}